// <auto-generated />
using System;
using CleanArchitectureTemplate.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleanArchitectureTemplate.Persistence.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20241120220043_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CleanArchitectureTemplate.Domain.Entities.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE")
                        .HasColumnName("Date");

                    b.Property<string>("Summary")
                        .HasColumnType("STRING")
                        .HasColumnName("Summary");

                    b.HasKey("Id")
                        .HasName("PK_WeatherForecast");

                    b.ToTable("WeatherForecast", (string)null);
                });

            modelBuilder.Entity("CleanArchitectureTemplate.Domain.Entities.WeatherForecast", b =>
                {
                    b.OwnsOne("CleanArchitectureTemplate.Domain.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<int>("WeatherForecastId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Celsius")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Celsius");

                            b1.Property<int>("Fahrenheit")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Fahrenheit");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecast");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");
                        });

                    b.Navigation("Temperature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
